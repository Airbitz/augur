webpackJsonp([7,11],{1005:function(e,t,a){"use strict";var n=a(14),l=a.n(n),r=a(563),o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},i=function(e){return l.a.createElement("section",{id:"login_message_view"},l.a.createElement("div",{className:"page-content"},l.a.createElement("h1",null,"Welcome to the Augur beta test!"),l.a.createElement("p",null,"This is a beta test in advance of Augur's live release. There are bugs. There are features being\n\t\t\t\tadded, improved, and re-designed. There are a few hundred enhancements scheduled to be added in the next few\n\t\t\t\tmonths. Your thoughtful feedback now is essential. Please use the feedback button at the bottom left of\n\t\t\t\tevery page to submit your feedback, or feel free to send an email to ",l.a.createElement("a",{className:"link",href:"mailto:hugs@augur.net?subject=Beta Testing feedback"},"hugs@augur.net"),". From your submissions, the development team will coordinate fixes and new features. Changes and fixes will be\n\t\t\t\tdisplayed when you log in again."),l.a.createElement("h2",null,"Important information:"),l.a.createElement("ol",null,l.a.createElement("li",null,"Because Augur is a ",l.a.createElement("b",null,"completely decentralized")," system, if you lose your login credentials it is impossible to recover them. Please ",l.a.createElement("a",{className:"link",href:"http://blog.augur.net/faq/how-do-i-savebackup-my-wallet/",target:"_blank",rel:"noopener noreferrer"},"take appropriate measures")," to protect the safety of your password, and create a way to recover your credentials if you forget them."),l.a.createElement("li",null,"Do not send real Ether (ETH) to your Augur account while we are testing! Each account will be given 10,000 testnet ETH tokens for beta testing. Please note that testnet ETH has no value except for testing: it is merely an on-contract IOU (a token) for testnet Ether."),l.a.createElement("li",null,"Reputation (REP) is a unique and important part of the Augur trading platform. If you own REP tokens, you must visit\n\t\t\t\t\tthe site periodically to fulfill your reporting obligations. During beta testing, each new account will\n\t\t\t\t\treceive 47 testnet REP (they have no value except for testing). Each reporting cycle will last 2 days. Every\n\t\t\t\t\ttwo-day cycle will consist of a commit phase, a reveal phase, and a challenge phase. Because the test\n\t\t\t\t\tcycle is dramatically compressed (the main net cycle will be 60 days long) it is recommended that\n\t\t\t\t\tusers visit the site at least every 2 days to maintain your REP and simulate “real money” trading,\n\t\t\t\t\tresolution, and reporting conditions. Learn ",l.a.createElement("a",{className:"link",href:"https://www.youtube.com/watch?v=sCms-snzHk4",target:"_blank",rel:"noopener noreferrer"},"how Augur's Reputation tokens work"),"."),l.a.createElement("li",null,'A note on price/time priority on the blockchain.  The site is only as fast as Ethereum blocks are mined.  Augur\'s matching engine sorts order books by price, then by block number, then by transaction index. Within a single block, transactions are ordered by the miner who mines the block.  When constructing a block, miners typically order transactions first by gasprice (highest to lowest), and then by the order received (oldest to newest).  So, Augur\'s "price/blocknumber/transaction index priority" ordering is generally equivalent to price/time priority, if there are differing gasprices within the block, the transaction index is not guaranteed to be time-ordered.  (Presently, Augur does not attempt to adjust gasprices in response to other pending transactions, although, if desired, gasprice can be adjusted manually using the API, by changing the "gasPrice" field attached to every sendTransaction payload.)')),l.a.createElement("h2",null,"Technical updates:"),l.a.createElement("h3",null,"December 31, 2016"),l.a.createElement("ol",null,l.a.createElement("li",null,"Indeterminate reports are now correctly converted to hexadecimal strings in augur.js fixReport method."),l.a.createElement("li",null,"Converted main trade logged-transaction loop to async.forEachOfSeries for proper getMarketInfo callback closure."),l.a.createElement("li",null,'Added initial check if "from" field matches login account address before processing relayed transactions.'),l.a.createElement("li",null,"Fixed a reassignment error in place-trade."),l.a.createElement("li",null,"Filled in collectFees front-end transaction relayer."),l.a.createElement("li",null,"Added a check for the second half of the reporting period to the collectFees block of the composite reporting synchronization / updating methods in augur.js."),l.a.createElement("li",null,"The relayed transaction gasFees field now is included in filtered/converted transactions, if it is available (in-memory).")),l.a.createElement("h3",null,"December 30, 2016"),l.a.createElement("ol",null,l.a.createElement("li",null,"Moved collectFees logic to augur.js: fee collection now handled automatically by augur.checkPeriod."),l.a.createElement("li",null,"The UI sync-branch-with-blockchain logic now looks up the last report cycle penalized and and the fee collection status of the cycle being checked for penalties.  Both of these fields are now attached to the branch data store and available in the front-end."),l.a.createElement("li",null,"Filled in switch cases for submitReport, submitReportHash, penalizeWrong, and penalizationCatchup in the front-end part of the transaction relayer.")),l.a.createElement("h3",null,"December 29, 2016"),l.a.createElement("ol",null,l.a.createElement("li",null,"Fixed/updated all downstream actions from or calling to bid, ask, and short ask.")),l.a.createElement("h3",null,"December 28, 2016"),l.a.createElement("ol",null,l.a.createElement("li",null,"Replaced deprecated bid, ask, and short ask transaction-related code with simple calls to augur.js.  All transaction display updating and messaging is now handled automatically by the transation relay and filters."),l.a.createElement("li",null,"Added possible events that can be logged by a method call to API maker script."),l.a.createElement("li",null,"Added error / null return checks to load-then-retry-conversion callbacks."),l.a.createElement("li",null,"Refactored trading log-to-transaction conversions.")),e.marketsLink&&l.a.createElement(r.a,o({className:"lets-do-this-button"},e.marketsLink),"Let's do this!")))};i.propTypes={marketsLink:n.PropTypes.object},t.default=i}});