{"version":3,"file":"5.js","sources":["webpack:///src/modules/auth/components/auth-view.jsx","webpack:///src/modules/auth/components/auth-form.jsx"],"sourcesContent":["import React, { PropTypes } from 'react';\nimport classnames from 'classnames';\nimport AuthForm from 'modules/auth/components/auth-form';\nimport Link from 'modules/link/components/link';\n\nclass AuthPage extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.authForm.airbitzOnLoad.onLoad();\n\t}\n\n\trender() {\n\t\tconst p = this.props;\n\t\treturn (\n\t\t\t<section id=\"auth_view\">\n\t\t\t\t<header className=\"page-header\">\n\t\t\t\t\t<span className=\"big-line\">Augur is a completely decentralized system</span> including user accounts.\n\t\t\t\t\tYour credentials never leave the browser, and you are responsible for keeping them safe.\n\t\t\t\t\t<br />\n\t\t\t\t\t<b>\n\t\t\t\t\t\t<i className=\"negative\">\n\t\t\t\t\t\t\tIt is impossible to recover your account if your credentials get lost!\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</b><br />\n\t\t\t\t\tClick&nbsp;\n\t\t\t\t\t<Link\n\t\t\t\t\t\tclassName={classnames('airbitz-button')}\n\t\t\t\t\t\tonClick={p.authForm.airbitzLink.onClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t{p.authForm.airbitzLinkText}\n\t\t\t\t\t</Link>\n\t\t\t\t\t&nbsp;to create an encrypted and backed up account using a simple username and password.\n\t\t\t\t</header>\n\t\t\t\t<AuthForm className=\"auth-form\" {...p.authForm} />\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nAuthPage.propTypes = {\n\tclassName: PropTypes.string,\n\tauthForm: PropTypes.object\n};\n\nexport default AuthPage;\n\n\n\n// WEBPACK FOOTER //\n// src/modules/auth/components/auth-view.jsx","import React, { Component, PropTypes } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport classnames from 'classnames';\nimport Link from 'modules/link/components/link';\nimport Checkbox from 'modules/common/components/checkbox';\n\nexport default class AuthForm extends Component {\n\tstatic propTypes = {\n\t\tclassName: PropTypes.string,\n\t\ttitle: PropTypes.string,\n\t\tloginID: PropTypes.string,\n\t\ttype: PropTypes.string,\n\t\trememberMe: PropTypes.bool,\n\t\tpasswordPlaceholder: PropTypes.string,\n\t\tpassword2Placeholder: PropTypes.string,\n\t\tinstruction: PropTypes.string,\n\t\tisVisibleName: PropTypes.bool,\n\t\tisVisiblePassword: PropTypes.bool,\n\t\tisVisiblePassword2: PropTypes.bool,\n\t\tisVisibleID: PropTypes.bool,\n\t\tisVisibleFileInput: PropTypes.bool,\n\t\tisVisibleRememberMe: PropTypes.bool,\n\t\tmsg: PropTypes.string,\n\t\tmsgClass: PropTypes.string,\n\t\ttopLinkText: PropTypes.string,\n\t\ttopLink: PropTypes.object,\n\t\tbotttomLinkText: PropTypes.string,\n\t\tbotttomLink: PropTypes.object,\n\t\tcloseLink: PropTypes.object,\n\t\tsubmitButtonText: PropTypes.string,\n\t\tsubmitButtonClass: PropTypes.string,\n\t\tonSubmit: PropTypes.func\n\t};\n\n\tstatic defaultProps = {\n\t\trememberMe: true\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handlePasswordInput = this.handlePasswordInput.bind(this);\n\t\tthis.loginIDCopy = this.loginIDCopy.bind(this);\n\t\tif (new FileReader()) {\n\t\t\tthis.fileReader = new FileReader();\n\t\t}\n\t\tthis.state = {\n\t\t\tmsg: this.props.msg,\n\t\t\tloginID: undefined,\n\t\t\trememberMe: this.props.rememberMe,\n\t\t\tdisableInputs: false,\n\t\t\tloginAccount: {},\n\t\t\tsubmitDisabled: props.type === 'register'\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.setState({ msg: nextProps.msg });\n\t}\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tconst name = this.refs.accountName.value;\n\t\tconst loginID = this.refs.loginID.value;\n\t\tconst password = this.refs.password.value;\n\t\tconst password2 = this.refs.password2.value;\n\t\tconst rememberMe = this.state.rememberMe;\n\t\tconst loginAccount = this.state.loginAccount;\n\t\tconst file = (this.refs.form[1].files[0] !== undefined);\n\n\t\tif (this.props.type === 'import' && file && this.fileReader) {\n\t\t\tthis.fileReader.readAsText(this.refs.form[1].files[0]);\n\t\t\tthis.fileReader.onload = (e) => {\n\t\t\t\tconst importAccount = JSON.parse(e.target.result);\n\t\t\t\tsetTimeout(() => this.props.onSubmit(name, password, password2, loginID, rememberMe, importAccount, loginAccount, undefined), 300);\n\t\t\t};\n\t\t} else {\n\t\t\tsetTimeout(() => this.props.onSubmit(name, password, password2, loginID, rememberMe, undefined, loginAccount, undefined), 300);\n\t\t}\n\t\tthis.setState({ msg: '', loginID: undefined, disableInputs: false });\n\t\treturn false;\n\t}\n\n\thandlePasswordInput = (e) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tconst name = this.refs.accountName.value;\n\t\tconst loginID = this.refs.loginID.value;\n\t\tconst password = this.refs.password.value;\n\t\tconst password2 = this.refs.password2.value;\n\t\tconst rememberMe = this.state.rememberMe;\n\n\t\tif (password !== '' && password2 !== '' && password.length === password2.length) {\n\t\t\tsetTimeout(() => this.props.onSubmit(name, password, password2, loginID, rememberMe, undefined, undefined, (loginAccount) => {\n\t\t\t\tthis.setState({ loginID: loginAccount.loginID, disableInputs: true, loginAccount, submitDisabled: false });\n\t\t\t}), 300);\n\t\t}\n\t}\n\n\tloginIDCopy = (e) => {\n\t\tconst loginIDDisplay = this.refs.loginIDDisplay;\n\n\t\ttry {\n\t\t\tloginIDDisplay.select();\n\t\t\tdocument.execCommand('copy');\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst p = this.props;\n\t\tconst s = this.state;\n\t\tconst submitDisabled = p.type === 'login' ? false : s.submitDisabled;\n\n\t\treturn (\n\t\t\t<form ref=\"form\" className={p.className} onSubmit={this.handleSubmit} encType=\"multipart/form-data\" autoComplete>\n\t\t\t\t<h1 className=\"title\">\n\t\t\t\t\t{p.title}\n\t\t\t\t\t{p.topLinkText &&\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"top-link\"\n\t\t\t\t\t\t\thref={p.topLink.href}\n\t\t\t\t\t\t\tonClick={p.topLink.onClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{p.topLinkText}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t}\n\t\t\t\t</h1>\n\t\t\t\t{p.instruction && <p className={classnames('instruction')}>{p.instruction}</p>}\n\t\t\t\t{s.msg &&\n\t\t\t\t\t<span className={classnames('msg', p.msgClass)}>\n\t\t\t\t\t\t{s.msg}\n\t\t\t\t\t</span>\n\t\t\t\t}\n\t\t\t\t<input\n\t\t\t\t\tref=\"accountName\"\n\t\t\t\t\tclassName={classnames('auth-input', { displayNone: !p.isVisibleName })}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"account name\"\n\t\t\t\t\tmaxLength=\"30\"\n\t\t\t\t\tautoFocus=\"autofocus\"\n\t\t\t\t\tdisabled={s.disableInputs}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname=\"importAccount\"\n\t\t\t\t\tclassName={classnames('auth-input', { displayNone: !p.isVisibleFileInput })}\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tplaceholder=\"Import Account\"\n\t\t\t\t\tautoFocus=\"autofocus\"\n\t\t\t\t/>\n\t\t\t\t{p.loginID &&\n\t\t\t\t\t<textarea ref=\"loginIDDisplay\" className={classnames('loginID-generated')} readOnly value={p.loginID} onClick={this.loginIDCopy} />\n\t\t\t\t}\n\t\t\t\t{p.loginID &&\n\t\t\t\t\t<button type=\"button\" className={classnames('button submit-button')} onClick={this.loginIDCopy}>Copy Login ID</button>\n\t\t\t\t}\n\t\t\t\t<input\n\t\t\t\t\tname=\"username\"\n\t\t\t\t\tid=\"username\"\n\t\t\t\t\tref=\"loginID\"\n\t\t\t\t\tclassName={classnames('auth-input', { displayNone: !p.isVisibleID })}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Login ID\"\n\t\t\t\t\tautoFocus=\"autofocus\"\n\t\t\t\t\tautoComplete\n\t\t\t\t\tonChange={loginID => this.setState({ loginID })}\n\t\t\t\t\trequired={p.isVisibleID}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tref=\"password\"\n\t\t\t\t\tclassName={classnames('auth-input', { displayNone: !p.isVisiblePassword })}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tdefaultValue={p.password}\n\t\t\t\t\tplaceholder={p.passwordPlaceholder || 'password (must be at least 6 characters in length)'}\n\t\t\t\t\tmaxLength=\"256\"\n\t\t\t\t\trequired={p.isVisiblePassword}\n\t\t\t\t\tautoComplete\n\t\t\t\t\tdisabled={s.disableInputs}\n\t\t\t\t\tonChange={this.handlePasswordInput}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tref=\"password2\"\n\t\t\t\t\tclassName={classnames('auth-input', { displayNone: !p.isVisiblePassword2 })}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder={p.password2Placeholder || 'confirm password'}\n\t\t\t\t\tmaxLength=\"256\"\n\t\t\t\t\trequired={p.isVisiblePassword2}\n\t\t\t\t\tdisabled={s.disableInputs}\n\t\t\t\t\tonChange={this.handlePasswordInput}\n\t\t\t\t/>\n\t\t\t\t<div className={classnames('instruction', { displayNone: !p.isVisibleRememberMe })}>\n\t\t\t\t\tSelect &ldquo;remember me&rdquo; to save your account and login automatically next time. (this will only remember your account on this device.)\n\t\t\t\t</div>\n\t\t\t\t<div className={classnames('bottom-container')}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tclassName={classnames('bottom-link', { displayNone: !p.bottomLink })}\n\t\t\t\t\t\thref={p.bottomLink.href}\n\t\t\t\t\t\tonClick={p.bottomLink.onClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t{p.bottomLinkText}\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tclassName={classnames({ displayNone: !p.isVisibleRememberMe })}\n\t\t\t\t\t\tdata-tip data-for=\"remember-me-tooltip\"\n\t\t\t\t\t\ttext=\"Remember Me\"\n\t\t\t\t\t\tisChecked={s.rememberMe}\n\t\t\t\t\t\tonClick={() => this.setState({ rememberMe: !s.rememberMe })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName={classnames('button', 'submit-button', p.submitButtonClass)}\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue={p.submitButtonText}\n\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t/>\n\t\t\t\t<Link\n\t\t\t\t\tclassName={classnames('airbitz-button airbitz-button-bottom')}\n\t\t\t\t\tonClick={p.airbitzLink.onClick}\n\t\t\t\t>\n\t\t\t\t\t{p.airbitzLinkText}\n\t\t\t\t</Link>\n\t\t\t\t<Link\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"button x-button unstyled\"\n\t\t\t\t\tdata-tip data-for=\"close-link-tooltip\"\n\t\t\t\t\thref={p.closeLink.href}\n\t\t\t\t\tonClick={p.closeLink.onClick}\n\t\t\t\t>\n\t\t\t\t\t<i></i>\n\t\t\t\t</Link>\n\t\t\t\t<ReactTooltip id=\"remember-me-tooltip\" type=\"light\" effect=\"solid\" place=\"top\">\n\t\t\t\t\t<span className=\"tooltip-text\">Click here to save your account information in your browser&#39;s local storage.</span>\n\t\t\t\t</ReactTooltip>\n\t\t\t\t<ReactTooltip id=\"close-link-tooltip\" type=\"light\" effect=\"solid\" place=\"top\">\n\t\t\t\t\t<span className=\"tooltip-text\">Back to Markets Page</span>\n\t\t\t\t</ReactTooltip>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// src/modules/auth/components/auth-form.jsx"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AARA;AAUA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAJA;AAVA;AAAA;AAkBA;AAnBA;AAsBA;;;;AA9BA;AACA;AAgCA;AACA;AACA;AAFA;AACA;AAIA;AAAA;;;;;;;;AAtCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAgCA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AARA;AAgBA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AALA;AAHA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AARA;AAgBA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAxHA;AA6HA;;;;AA7OA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AADA;AA6BA;AADA;AA5BA;;;;;;;;;AAAA;AACA;;;;;;;;;;;;;;;;","sourceRoot":""}